/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.etan.portal.integration.prototype.projectservice.model;

import aQute.bnd.annotation.ProviderType;
import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the InfrastructureEntityProject service. Represents a row in the &quot;ProjectService_InfrastructureEntityProject&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.etan.portal.integration.prototype.projectservice.model.impl.InfrastructureEntityProjectModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.etan.portal.integration.prototype.projectservice.model.impl.InfrastructureEntityProjectImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see InfrastructureEntityProject
 * @see org.etan.portal.integration.prototype.projectservice.model.impl.InfrastructureEntityProjectImpl
 * @see org.etan.portal.integration.prototype.projectservice.model.impl.InfrastructureEntityProjectModelImpl
 * @generated
 */
@ProviderType
public interface InfrastructureEntityProjectModel extends BaseModel<InfrastructureEntityProject> {
    /*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a infrastructure entity project model instance should use the {@link InfrastructureEntityProject} interface instead.
	 */

    /**
     * Returns the primary key of this infrastructure entity project.
     *
     * @return the primary key of this infrastructure entity project
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this infrastructure entity project.
     *
     * @param primaryKey the primary key of this infrastructure entity project
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the infrastructure entity project pk ID of this infrastructure entity project.
     *
     * @return the infrastructure entity project pk ID of this infrastructure entity project
     */
    public long getInfrastructureEntityProjectPKId();

    /**
     * Sets the infrastructure entity project pk ID of this infrastructure entity project.
     *
     * @param infrastructureEntityProjectPKId the infrastructure entity project pk ID of this infrastructure entity project
     */
    public void setInfrastructureEntityProjectPKId(
            long infrastructureEntityProjectPKId);

    /**
     * Returns the organization ID of this infrastructure entity project.
     *
     * @return the organization ID of this infrastructure entity project
     */
    public long getOrganizationId();

    /**
     * Sets the organization ID of this infrastructure entity project.
     *
     * @param organizationId the organization ID of this infrastructure entity project
     */
    public void setOrganizationId(long organizationId);

    /**
     * Returns the infrastructure entity name of this infrastructure entity project.
     *
     * @return the infrastructure entity name of this infrastructure entity project
     */
    @AutoEscape
    public String getInfrastructureEntityName();

    /**
     * Sets the infrastructure entity name of this infrastructure entity project.
     *
     * @param infrastructureEntityName the infrastructure entity name of this infrastructure entity project
     */
    public void setInfrastructureEntityName(String infrastructureEntityName);

    /**
     * Returns the infrastructure entity project ID of this infrastructure entity project.
     *
     * @return the infrastructure entity project ID of this infrastructure entity project
     */
    @AutoEscape
    public String getInfrastructureEntityProjectId();

    /**
     * Sets the infrastructure entity project ID of this infrastructure entity project.
     *
     * @param infrastructureEntityProjectId the infrastructure entity project ID of this infrastructure entity project
     */
    public void setInfrastructureEntityProjectId(
            String infrastructureEntityProjectId);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(
            InfrastructureEntityProject infrastructureEntityProject);

    @Override
    public int hashCode();

    @Override
    public CacheModel<InfrastructureEntityProject> toCacheModel();

    @Override
    public InfrastructureEntityProject toEscapedModel();

    @Override
    public InfrastructureEntityProject toUnescapedModel();

	@Override
    public String toString();

	@Override
    public String toXmlString();
}