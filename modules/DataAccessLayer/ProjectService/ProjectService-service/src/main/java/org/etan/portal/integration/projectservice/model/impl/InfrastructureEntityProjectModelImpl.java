/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.etan.portal.integration.projectservice.model.impl;

import aQute.bnd.annotation.ProviderType;
import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import org.etan.portal.integration.projectservice.model.InfrastructureEntityProject;
import org.etan.portal.integration.projectservice.model.InfrastructureEntityProjectModel;
import org.etan.portal.integration.projectservice.model.InfrastructureEntityProjectSoap;

import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the InfrastructureEntityProject service. Represents a row in the &quot;ProjectService_InfrastructureEntityProject&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link InfrastructureEntityProjectModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link InfrastructureEntityProjectImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see InfrastructureEntityProjectImpl
 * @see InfrastructureEntityProject
 * @see InfrastructureEntityProjectModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class InfrastructureEntityProjectModelImpl extends BaseModelImpl<InfrastructureEntityProject>
        implements InfrastructureEntityProjectModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a infrastructure entity project model instance should use the {@link InfrastructureEntityProject} interface instead.
     */
	public static final String TABLE_NAME = "ProjectService_InfrastructureEntityProject";
	public static final Object[][] TABLE_COLUMNS = {
            {"infrastructureEntityProjectPKId", Types.BIGINT},
            {"organizationId", Types.BIGINT},
            {"infrastructureEntityName", Types.VARCHAR},
            {"infrastructureEntityProjectId", Types.VARCHAR}
    };
    public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();
    public static final String TABLE_SQL_CREATE = "create table ProjectService_InfrastructureEntityProject (infrastructureEntityProjectPKId LONG not null primary key,organizationId LONG,infrastructureEntityName VARCHAR(75) null,infrastructureEntityProjectId VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table ProjectService_InfrastructureEntityProject";
	public static final String ORDER_BY_JPQL = " ORDER BY infrastructureEntityProject.organizationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ProjectService_InfrastructureEntityProject.organizationId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.etan.portal.integration.projectservice.service.util.ServiceProps.get(
            "value.object.entity.cache.enabled.org.etan.portal.integration.projectservice.model.InfrastructureEntityProject"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.etan.portal.integration.projectservice.service.util.ServiceProps.get(
            "value.object.finder.cache.enabled.org.etan.portal.integration.projectservice.model.InfrastructureEntityProject"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.etan.portal.integration.projectservice.service.util.ServiceProps.get(
            "value.object.column.bitmask.enabled.org.etan.portal.integration.projectservice.model.InfrastructureEntityProject"),
            true);
    public static final long ORGANIZATIONID_COLUMN_BITMASK = 1L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.etan.portal.integration.projectservice.service.util.ServiceProps.get(
            "lock.expiration.time.org.etan.portal.integration.projectservice.model.InfrastructureEntityProject"));
    private static final ClassLoader _classLoader = InfrastructureEntityProject.class.getClassLoader();
    private static final Class<?>[] _escapedModelInterfaces = new Class[]{
            InfrastructureEntityProject.class
    };

	static {
		TABLE_COLUMNS_MAP.put("infrastructureEntityProjectPKId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("organizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("infrastructureEntityName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("infrastructureEntityProjectId", Types.VARCHAR);
	}

	private long _infrastructureEntityProjectPKId;
	private long _organizationId;
	private long _originalOrganizationId;
	private boolean _setOriginalOrganizationId;
	private String _infrastructureEntityName;
	private String _infrastructureEntityProjectId;
	private long _columnBitmask;
	private InfrastructureEntityProject _escapedModel;

	public InfrastructureEntityProjectModelImpl() {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static InfrastructureEntityProject toModel(
            InfrastructureEntityProjectSoap soapModel) {
        if (soapModel == null) {
            return null;
		}

		InfrastructureEntityProject model = new InfrastructureEntityProjectImpl();

		model.setInfrastructureEntityProjectPKId(soapModel.getInfrastructureEntityProjectPKId());
		model.setOrganizationId(soapModel.getOrganizationId());
		model.setInfrastructureEntityName(soapModel.getInfrastructureEntityName());
		model.setInfrastructureEntityProjectId(soapModel.getInfrastructureEntityProjectId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<InfrastructureEntityProject> toModels(
            InfrastructureEntityProjectSoap[] soapModels) {
        if (soapModels == null) {
            return null;
		}

		List<InfrastructureEntityProject> models = new ArrayList<InfrastructureEntityProject>(soapModels.length);

		for (InfrastructureEntityProjectSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	@Override
	public long getPrimaryKey() {
		return _infrastructureEntityProjectPKId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setInfrastructureEntityProjectPKId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _infrastructureEntityProjectPKId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

	@Override
	public Class<?> getModelClass() {
		return InfrastructureEntityProject.class;
	}

	@Override
	public String getModelClassName() {
		return InfrastructureEntityProject.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("infrastructureEntityProjectPKId",
                getInfrastructureEntityProjectPKId());
        attributes.put("organizationId", getOrganizationId());
        attributes.put("infrastructureEntityName", getInfrastructureEntityName());
		attributes.put("infrastructureEntityProjectId",
                getInfrastructureEntityProjectId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
        Long infrastructureEntityProjectPKId = (Long) attributes.get(
                "infrastructureEntityProjectPKId");

		if (infrastructureEntityProjectPKId != null) {
			setInfrastructureEntityProjectPKId(infrastructureEntityProjectPKId);
		}

        Long organizationId = (Long) attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

        String infrastructureEntityName = (String) attributes.get(
                "infrastructureEntityName");

		if (infrastructureEntityName != null) {
			setInfrastructureEntityName(infrastructureEntityName);
		}

        String infrastructureEntityProjectId = (String) attributes.get(
                "infrastructureEntityProjectId");

		if (infrastructureEntityProjectId != null) {
			setInfrastructureEntityProjectId(infrastructureEntityProjectId);
		}
	}

	@JSON
	@Override
	public long getInfrastructureEntityProjectPKId() {
		return _infrastructureEntityProjectPKId;
	}

	@Override
	public void setInfrastructureEntityProjectPKId(
            long infrastructureEntityProjectPKId) {
        _infrastructureEntityProjectPKId = infrastructureEntityProjectPKId;
    }

	@JSON
	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_columnBitmask = -1L;

		if (!_setOriginalOrganizationId) {
			_setOriginalOrganizationId = true;

			_originalOrganizationId = _organizationId;
		}

		_organizationId = organizationId;
	}

	public long getOriginalOrganizationId() {
		return _originalOrganizationId;
	}

	@JSON
	@Override
	public String getInfrastructureEntityName() {
		if (_infrastructureEntityName == null) {
			return StringPool.BLANK;
        } else {
            return _infrastructureEntityName;
        }
	}

	@Override
	public void setInfrastructureEntityName(String infrastructureEntityName) {
		_infrastructureEntityName = infrastructureEntityName;
	}

	@JSON
	@Override
	public String getInfrastructureEntityProjectId() {
		if (_infrastructureEntityProjectId == null) {
			return StringPool.BLANK;
        } else {
            return _infrastructureEntityProjectId;
        }
	}

	@Override
	public void setInfrastructureEntityProjectId(
            String infrastructureEntityProjectId) {
        _infrastructureEntityProjectId = infrastructureEntityProjectId;
    }

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
                InfrastructureEntityProject.class.getName(), getPrimaryKey());
    }

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public InfrastructureEntityProject toEscapedModel() {
		if (_escapedModel == null) {
            _escapedModel = (InfrastructureEntityProject) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

		return _escapedModel;
	}

	@Override
	public Object clone() {
		InfrastructureEntityProjectImpl infrastructureEntityProjectImpl = new InfrastructureEntityProjectImpl();

		infrastructureEntityProjectImpl.setInfrastructureEntityProjectPKId(getInfrastructureEntityProjectPKId());
		infrastructureEntityProjectImpl.setOrganizationId(getOrganizationId());
		infrastructureEntityProjectImpl.setInfrastructureEntityName(getInfrastructureEntityName());
		infrastructureEntityProjectImpl.setInfrastructureEntityProjectId(getInfrastructureEntityProjectId());

		infrastructureEntityProjectImpl.resetOriginalValues();

		return infrastructureEntityProjectImpl;
	}

	@Override
	public int compareTo(
            InfrastructureEntityProject infrastructureEntityProject) {
        int value = 0;

		if (getOrganizationId() < infrastructureEntityProject.getOrganizationId()) {
			value = -1;
        } else if (getOrganizationId() > infrastructureEntityProject.getOrganizationId()) {
            value = 1;
        } else {
            value = 0;
        }

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof InfrastructureEntityProject)) {
			return false;
		}

        InfrastructureEntityProject infrastructureEntityProject = (InfrastructureEntityProject) obj;

		long primaryKey = infrastructureEntityProject.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
        } else {
            return false;
        }
	}

	@Override
	public int hashCode() {
        return (int) getPrimaryKey();
    }

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		InfrastructureEntityProjectModelImpl infrastructureEntityProjectModelImpl =
                this;

		infrastructureEntityProjectModelImpl._originalOrganizationId = infrastructureEntityProjectModelImpl._organizationId;

		infrastructureEntityProjectModelImpl._setOriginalOrganizationId = false;

		infrastructureEntityProjectModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<InfrastructureEntityProject> toCacheModel() {
		InfrastructureEntityProjectCacheModel infrastructureEntityProjectCacheModel =
                new InfrastructureEntityProjectCacheModel();

		infrastructureEntityProjectCacheModel.infrastructureEntityProjectPKId = getInfrastructureEntityProjectPKId();

		infrastructureEntityProjectCacheModel.organizationId = getOrganizationId();

		infrastructureEntityProjectCacheModel.infrastructureEntityName = getInfrastructureEntityName();

		String infrastructureEntityName = infrastructureEntityProjectCacheModel.infrastructureEntityName;

		if ((infrastructureEntityName != null) &&
				(infrastructureEntityName.length() == 0)) {
			infrastructureEntityProjectCacheModel.infrastructureEntityName = null;
		}

		infrastructureEntityProjectCacheModel.infrastructureEntityProjectId = getInfrastructureEntityProjectId();

		String infrastructureEntityProjectId = infrastructureEntityProjectCacheModel.infrastructureEntityProjectId;

		if ((infrastructureEntityProjectId != null) &&
				(infrastructureEntityProjectId.length() == 0)) {
			infrastructureEntityProjectCacheModel.infrastructureEntityProjectId = null;
		}

		return infrastructureEntityProjectCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{infrastructureEntityProjectPKId=");
		sb.append(getInfrastructureEntityProjectPKId());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", infrastructureEntityName=");
		sb.append(getInfrastructureEntityName());
		sb.append(", infrastructureEntityProjectId=");
		sb.append(getInfrastructureEntityProjectId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append(
                "org.etan.portal.integration.projectservice.model.InfrastructureEntityProject");
        sb.append("</model-name>");

		sb.append(
                "<column><column-name>infrastructureEntityProjectPKId</column-name><column-value><![CDATA[");
        sb.append(getInfrastructureEntityProjectPKId());
        sb.append("]]></column-value></column>");
		sb.append(
                "<column><column-name>organizationId</column-name><column-value><![CDATA[");
        sb.append(getOrganizationId());
        sb.append("]]></column-value></column>");
		sb.append(
                "<column><column-name>infrastructureEntityName</column-name><column-value><![CDATA[");
        sb.append(getInfrastructureEntityName());
        sb.append("]]></column-value></column>");
		sb.append(
                "<column><column-name>infrastructureEntityProjectId</column-name><column-value><![CDATA[");
        sb.append(getInfrastructureEntityProjectId());
        sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}
}